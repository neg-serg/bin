#!/usr/bin/pypy3

import subprocess
import shlex
from os.path import expanduser


class tmux_manager():
    def __init__(self):
        self.session_name = 'main'
        self.socket_path = expanduser(
            f'~/1st_level/{self.session_name}.socket'
        )
        self.term_name = "MainTerminal"
        self.prefix = f"{expanduser('~/bin/dynamic-colors')} switch dark3;"
        self.tmux_session_attach = \
            f"tmux -S {self.socket_path} a -t {self.session_name}"
        self.tmux_new_session = \
            f"tmux -S {self.socket_path} new-session -s {self.session_name}"

        self.params = {
            "alacritty": ["alacritty"] + [
                "-t", self.term_name,
                "-e", "dash", "-c"
            ]
        }

    def detect_session_bind(self):
        session_list = subprocess.run(
            shlex.split(f"tmux -S {self.socket_path} list-sessions"),
            stdout=subprocess.PIPE
        ).stdout
        return subprocess.run(
            shlex.split(f"awk -F ':' '/{self.session_name}/ {{print $1}}'"),
            stdout=subprocess.PIPE,
            input=(session_list)
        ).stdout.decode()

    def attach_to_session(self):
        subprocess.run(
            self.params["alacritty"] +
            [f"{self.prefix} {self.tmux_session_attach}"]
        )

    def create_new_session(self):
        subprocess.run(
            self.params["alacritty"] +
            [f"{self.prefix} {self.tmux_new_session} && \
                {self.tmux_session_attach}"]
        )

    def search_classname(self):
        return subprocess.run(
            shlex.split(f"xdotool search --classname {self.term_name}"),
            stdout=subprocess.PIPE
        ).stdout

    def run(self):
        if self.session_name in self.detect_session_bind():
            wid = self.search_classname()
            try:
                if int(wid.decode()):
                    pass
            except ValueError:
                self.attach_to_session()
        else:
            self.create_new_session()

tm = tmux_manager()
tm.run()

